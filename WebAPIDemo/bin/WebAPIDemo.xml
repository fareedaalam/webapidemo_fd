<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebAPIDemo</name>
    </assembly>
    <members>
        <member name="T:WebAPIDemo.UnityConfig">
            <summary>
            Specifies the Unity configuration for the main container.
            </summary>
        </member>
        <member name="P:WebAPIDemo.UnityConfig.Container">
            <summary>
            Configured Unity Container.
            </summary>
        </member>
        <member name="M:WebAPIDemo.UnityConfig.RegisterTypes(Unity.IUnityContainer)">
            <summary>
            Registers the type mappings with the Unity container.
            </summary>
            <param name="container">The unity container to configure.</param>
            <remarks>
            There is no need to register concrete types such as controllers or
            API controllers (unless you want to change the defaults), as Unity
            allows resolving a concrete type even if it was not previously
            registered.
            </remarks>
        </member>
        <member name="T:WebAPIDemo.UnityMvcActivator">
            <summary>
            Provides the bootstrapping for integrating Unity with ASP.NET MVC.
            </summary>
        </member>
        <member name="M:WebAPIDemo.UnityMvcActivator.Start">
            <summary>
            Integrates Unity when the application starts.
            </summary>
        </member>
        <member name="M:WebAPIDemo.UnityMvcActivator.Shutdown">
            <summary>
            Disposes the Unity container when the application is shut down.
            </summary>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:WebAPIDemo.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,WebAPIDemo.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:WebAPIDemo.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:WebAPIDemo.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:WebAPIDemo.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:WebAPIDemo.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:WebAPIDemo.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:WebAPIDemo.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:WebAPIDemo.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebAPIDemo.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:WebAPIDemo.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:WebAPIDemo.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:WebAPIDemo.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:WebAPIDemo.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:WebAPIDemo.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:WebAPIDemo.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:WebAPIDemo.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:WebAPIDemo.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:WebAPIDemo.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:WebAPIDemo.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:WebAPIDemo.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:WebAPIDemo.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:WebAPIDemo.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:WebAPIDemo.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:WebAPIDemo.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebAPIDemo.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:WebAPIDemo.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:WebAPIDemo.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:WebAPIDemo.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:WebAPIDemo.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:WebAPIDemo.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,WebAPIDemo.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,WebAPIDemo.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:WebAPIDemo.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:WebAPIDemo.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:WebAPIDemo.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(WebAPIDemo.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:WebAPIDemo.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:WebAPIDemo.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},WebAPIDemo.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:WebAPIDemo.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:WebAPIDemo.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:WebAPIDemo.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageSampleKey.#ctor(WebAPIDemo.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:WebAPIDemo.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:WebAPIDemo.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:WebAPIDemo.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,WebAPIDemo.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:WebAPIDemo.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:WebAPIDemo.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:WebAPIDemo.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:WebAPIDemo.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:WebAPIDemo.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:WebAPIDemo.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:WebAPIDemo.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:WebAPIDemo.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:WebAPIDemo.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:WebAPIDemo.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebAPIDemo.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:WebAPIDemo.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:WebAPIDemo.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:WebAPIDemo.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:WebAPIDemo.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:WebAPIDemo.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:WebAPIDemo.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebAPIDemo.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="M:WebAPIDemo.Controllers.BoardController.Put(System.Guid,BusinessEntities.BoardEntity)">
            <param name="id"></param>
            <param name="brdEntity"></param>
        </member>
        <member name="M:WebAPIDemo.Controllers.CategoryController.Get">
            <summary>
            Get All Category 
            </summary>
            <returns>Json Result </returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.CityController.GetCityByStateId(System.Object)">
            <summary>
            Get City list stateid
            </summary>
            <param name="SearchForm">Pass StateId in post data feild </param>
            <returns>list of states by releted conuntry </returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.ConceptMappingController.GetConcepts(BusinessEntities.ConceptMappingEntity)">
            <summary>
            Get Question Pattern by purticular Id
            </summary>
            <param name="entity">
            {"TopicId": "","CategorySubTopicId": "", "LevelId": "","BoardId": "","SubjectId": "","StandardId": "" }
            </param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.CurriculumController.Post(BusinessEntities.CurriculumEntity)">
            <summary>
            
            </summary>
            <param name="curriculumEntity"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.CurriculumController.GetByUser(System.Object)">
            <summary>
            
            </summary>
            <param name="SearchForm"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.CurriculumDetailsController.#ctor(BusinessServices.Interface.ICurriculumInterface)">
            <summary>
            
            </summary>
            <param name="curriculumInterface"></param>
        </member>
        <member name="M:WebAPIDemo.Controllers.CurriculumDetailsController.Get">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.CurriculumDetailsController.Put(System.Guid,BusinessEntities.CurriculumDetailsEntity)">
            <summary>
            
            </summary>
            <param name="Id"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.EmailController.#ctor(BusinessServices.Interface.IEmailInterface)">
            <summary>
            
            </summary>
            <param name="iEmailInterface"></param>
        </member>
        <member name="M:WebAPIDemo.Controllers.EmailController.Post(System.Object)">
            <summary>
            
            </summary>
            <param name="SearchForm">string To,  string Cc, string Subject, string Body</param>
        </member>
        <member name="M:WebAPIDemo.Controllers.LocationController.GetLocationByCityId(System.Object)">
            <summary>
            
            </summary>
            <param name="SearchForm">CityId</param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.MailerController.Get">
            <summary>
            Get All Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.MailerController.Get(System.Guid)">
            <summary>
            Get By Id
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.MailerController.Post(BusinessEntities.MailerEntity)">
            <summary>
            Insert Data
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.MailerController.Put(System.Guid,BusinessEntities.MailerEntity)">
            <summary>
            Update Entity
            </summary>
            <param name="Id"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.MailerController.Delete(System.Guid)">
            <summary>
            Delete Data
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapParentChildController.Post(BusinessEntities.MapParentChildEntity)">
            <summary>
            Assign Child To Parent
            </summary>
            <param name="data">ParentId,ChildEmail=Email</param>
            <returns></returns> 
        </member>
        <member name="M:WebAPIDemo.Controllers.MapParentChildController.Put(System.Guid,BusinessEntities.MapParentChildEntity)">
            <summary>
            Not Implemented
            </summary>
            <param name="Id"></param>
            <param name="value"></param>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapParentChildController.Delete(System.Object)">
            <summary>
            Not working due to refrence mapping
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapParentChildController.DeleteMapping(BusinessEntities.MapParentChildEntity)">
            <summary>
            Take object of {ParentId:'',ChildId:''}
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPIDemo.Controllers.MapRolePermissionController">
            <summary>
            
            </summary>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapRolePermissionController.#ctor(BusinessServices.Interface.IMapRolePermissionInterface)">
            <summary>
            
            </summary>
            <param name="iMapRolePermissionInterface"></param>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapRolePermissionController.Get">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapRolePermissionController.Get(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapRolePermissionController.Post(System.Object)">
            <summary>
             Assign Role to Permission
            </summary>
            <param name="data">[{"RoleId":"","PermissionId":""}]</param>
            <returns>Success Message</returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapRolePermissionController.Delete(System.Object)">
            <summary>
            
            </summary>
            <param name="data">{PermissionId:'', RoleId:''}</param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapRoleUserController.#ctor(BusinessServices.Interface.IMapRoleUserInterface)">
            <summary>
            
            </summary>
            <param name="iRoleInterface"></param>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapRoleUserController.Get">
            <summary>
            Get All Mapped Role
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapRoleUserController.Get(System.Guid)">
            <summary>
            Get mapping by role id
            </summary>
            <param name="id">PassRole ID </param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapRoleUserController.Post(System.Object)">
            <summary>
            Assign Role to any user
            </summary>
            <param name="data">UserId and RoleId</param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapRoleUserController.Delete(System.Object)">
            <summary>
            Delete Assing Role 
            </summary>
            <param name="data">RoleId and UserId</param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapRoleUserController.GetRoleByUserId(System.Object)">
            <summary>
            get user role by user id
            </summary>
            <param name="SearchForm">UserId</param>
            <returns>if Success Return Json List else string message</returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapTeacherChildController.#ctor(BusinessServices.Interface.IMapTeacherChildInterface)">
            <summary>
            
            </summary>
            <param name="iMapTeacherChildInterface"></param>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapTeacherChildController.Get(System.Guid)">
            <summary>
            pass teacher Id
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapTeacherChildController.Put(System.Guid,BusinessEntities.MapTeacherChildEntity)">
            <summary>
            Not Implemented
            </summary>
            <param name="id"></param>
            <param name="value"></param>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapTeacherChildController.Delete(System.Int32)">
            <summary>
            Not Implemented
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapTeacherStudentQuizController.#ctor(BusinessServices.Interface.IMapTeacherStudentQuizInterface)">
            <summary>
            
            </summary>
            <param name="iMapTeacherStudentQuizInterface"></param>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapTeacherStudentQuizController.Get">
            <summary>
            Not Implemented
            </summary>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapTeacherStudentQuizController.Get(System.Guid)">
            <summary>
            pass quiz Id
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapTeacherStudentQuizController.Put(System.Guid,System.Collections.Generic.List{BusinessEntities.MapTeacherStudentQuizEntity})">
            <summary>
            Not Implemented
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapTeacherStudentQuizController.Delete(System.Guid)">
            <summary>
            Not Implemented
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapTeacherStudentQuizController.SaveQuizResponse(BusinessEntities.MapTeacherStudentQuizEntity)">
            <summary>
            Save Student Quiz Response
            </summary>
            <param name="quiz">
            {"UserId": ""}
            </param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.MapTeacherStudentQuizController.GetStudentQuiz(System.Object)">
            <summary>
            pass student Id
            </summary>
            <param name="StudentId"></param>
            <returns></returns>
        </member>
        <member name="T:WebAPIDemo.Controllers.ParamMasterController">
            <summary>
            
            </summary>
        </member>
        <member name="M:WebAPIDemo.Controllers.ParamMasterController.#ctor(BusinessServices.IParamDetailsInterface)">
            <summary>
            
            </summary>
            <param name="paramDetailsInterface"></param>
        </member>
        <member name="M:WebAPIDemo.Controllers.ParamMasterController.Get">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.ParamMasterController.Get(System.Guid)">
            <summary>
            
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.ParamMasterController.Post(BusinessEntities.ParamMasterEntity)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.ParamMasterController.Put(System.Guid,BusinessEntities.ParamMasterEntity)">
            <summary>
            
            </summary>
            <param name="Id"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.ParamMasterController.Delete(System.Guid)">
            <summary>
            
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.PermissionController.Get">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.PermissionController.Get(System.Guid)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.PermissionController.Post(BusinessEntities.PermissionEntity)">
            <summary>
            
            </summary>
            <param name="permissionEntity"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.PermissionController.Put(System.Guid,BusinessEntities.PermissionEntity)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="permissionEntity"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.PermissionController.Delete(System.Guid)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.QuestionPatternController.GetQuestionPattern(BusinessEntities.QuestionPatternEntity)">
            <summary>
            Get Question Pattern by purticular Id
            </summary>
            <param name="QuestionPatternEntity">
            {"TopicId": "","SubTopicId": "","CategorySubTopicId": "", "LevelId": "","BoardId": "","SubjectId": "","StandardId": "" }
            </param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.QuestionPatternController.GetQuestionPattern_Category(BusinessEntities.QuestionPatternEntity)">
            <summary>
            for remove duplicate category name for display purpose
            </summary>
            <param name="queEntity">{"TopicId": "","SubTopicId": "","CategorySubTopicId": ""}</param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.QuestionPatternController.GetQuestionPatternsWithSolutions(BusinessEntities.QuestionPatternEntity)">
            <summary>
            Get Question Pattern by purticular Id
            </summary>
            <param name="QuestionPatternEntity">
            {"TopicId": "","SubTopicId": "","CategorySubTopicId": "", "LevelId": "","BoardId": "","SubjectId": "","StandardId": "" }
            </param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.QuizController.Get(System.Guid)">
            <summary>
            Pass UserId 
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.QuizController.GetQuiz(BusinessEntities.QuizEntity)">
            <summary>
            Get Quiz by particular Id
            </summary>
            <param name="quiz">
            {"UserId": ""}
            </param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.QuizController.SaveQuizResponse(BusinessEntities.QuizEntity)">
            <summary>
            Save Student Quiz Response
            </summary>
            <param name="quiz">
            {"UserId": ""}
            </param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.SolutionsController.Get">
            <summary>
            Get All solutions
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.SolutionsController.Get(System.Guid)">
            <summary>
            Get solution by pattern Id
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.SolutionsController.GetByPattern(System.Guid)">
            <summary>
             get Solution by solution id (identity or primary key) pass row unique id
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.SolutionsController.Post(BusinessEntities.SolutionsEntity)">
            <summary>
            Save/Create Solutions
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.SolutionsController.Put(System.Guid,BusinessEntities.SolutionsEntity)">
            <summary>
            Update solutions
            </summary>
            <param name="Id"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.SolutionsController.Delete(System.Guid)">
            <summary>
            Delete Solutions
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.StandardController.#ctor(BusinessServices.Interface.IStandardInterface)">
            <summary>
            
            </summary>
            <param name="iStandardInterface"></param>
        </member>
        <member name="M:WebAPIDemo.Controllers.StandardController.Get">
            <summary>
            Get All Standarad
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.StandardController.Get(System.Guid)">
            <summary>
            Get Standard by Id 
            </summary>
            <param name="Id"></param>
            <returns>Json Result</returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.StandardController.Post(BusinessEntities.StandardEntity)">
            <summary>
            
            </summary>
            <param name="standardEntity"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.StandardController.Put(System.Guid,BusinessEntities.StandardEntity)">
            <summary>
            
            </summary>
            <param name="Id"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.StandardController.Delete(System.Guid)">
            <summary>
            
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.StateController.#ctor(BusinessServices.Interface.IStateInterface)">
            <summary>
            
            </summary>
            <param name="stateInterface"></param>
        </member>
        <member name="M:WebAPIDemo.Controllers.StateController.GetStateByCountryId(System.Object)">
            <summary>
            Get State list by countyid
            </summary>
            <param name="SearchForm">Pass ContryId in post data feild </param>
            <returns>list of states by releted conuntry </returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.TopicController.GetTopicBySubjectId(System.Object)">
            <summary>
            Get topic by subject Id
            </summary>
            <param name="SearchForm">SubjectId</param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.UserController.Get(System.Guid)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.UserController.Post(BusinessEntities.UserEntity)">
            <summary>
            Create User
            </summary>
            <param name="userEntity"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.UserController.Put(System.Guid,BusinessEntities.UserEntity)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="userEntity"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.UserController.Delete(System.Guid)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.UserController.GetUser(BusinessEntities.UserEntity)">
            <summary>
            Check User exists 
            </summary>
            <param name="searchform">UserName and Pwd</param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.UserController.ForgotPassword(System.Object)">
            <summary>
            GetUserByEmailId
            </summary>
            <param name="SearchForm">{"Email":""}</param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.UserController.EmailVerify(System.Guid)">
            <summary>
            
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="M:WebAPIDemo.Controllers.UserController.IsEmailExist(System.Object)">
            <summary>
            Check Email Id Is Exist or not
            </summary>
            <param name="SearchForm">{"Email":""}</param>
            <returns></returns>
        </member>
    </members>
</doc>
